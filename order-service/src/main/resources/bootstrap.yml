server:
  port: 9192

keycloak-client:
  server-url: http://localhost:8080/auth
  realm:  devnation

spring:
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: djordje
  application:
    name: ORDER-SERVICE
  cloud:
    config:
      uri: http://localhost:9196
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: cloud-gateway
            client-secret: 9c67f378-d92a-4197-b284-0265ef6d1a7f
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8989/login/oauth2/code/cloud-gateway
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
            user-name-attribute: name
            user-info-authentication-method: header
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs


management:
  endpoints:
    web:
      exposure:
        include: "*"
#keycloak:
#  auth-server-url: http://localhost:8080/authe
#  realm: devnation
#  resource: order-service
#  public-client: true
#  security-constraints:
#    -   authRoles:
#          - user
#        securityCollections:
#          -   name: application
#              patterns:
#                - /order/*